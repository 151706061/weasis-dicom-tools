<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.weasis</groupId>
    <artifactId>weasis-dicom-tools-bom</artifactId>
    <packaging>pom</packaging>
    <name>Weasis DICOM API (based on dcm4che3) - BOM</name>
    <version>${revision}${sha1}${changelist}</version>

    <properties>
        <revision>${dcm4che.version}.1</revision>
        <changelist>-SNAPSHOT</changelist>
        <sha1/>

        <dcm4che.version>5.31.2</dcm4che.version>
        <weasis.core.img.version>4.8.1.2-SNAPSHOT</weasis.core.img.version>
    </properties>

    <modules>
        <module>jar</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.dcm4che</groupId>
                <artifactId>dcm4che-parent</artifactId>
                <version>${dcm4che.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.dcm4che</groupId>
                <artifactId>dcm4che-core</artifactId>
                <version>${dcm4che.version}</version>
            </dependency>
            <dependency>
                <groupId>org.dcm4che</groupId>
                <artifactId>dcm4che-dict</artifactId>
                <version>${dcm4che.version}</version>
            </dependency>
            <dependency>
                <groupId>org.dcm4che</groupId>
                <artifactId>dcm4che-net</artifactId>
                <version>${dcm4che.version}</version>
            </dependency>

            <dependency>
                <!-- FIX Eclipse Parsson Denial of Service vulnerability -->
                <!-- CVE-2023-4043 - org.eclipse.parsson:parsson -->
                <!--    https://github.com/keycloak/keycloak/issues/25545-->
                <groupId>org.eclipse.parsson</groupId>
                <artifactId>parsson</artifactId>
                <version>1.1.5</version>
                <!--!! note this dependency must be set before dcm4che-json to override the transitive version-->
            </dependency>
            <dependency>
                <groupId>org.dcm4che</groupId>
                <artifactId>dcm4che-json</artifactId>
                <version>${dcm4che.version}</version>
            </dependency>
            <dependency>
                <groupId>org.dcm4che</groupId>
                <artifactId>dcm4che-image</artifactId>
                <version>${dcm4che.version}</version>
            </dependency>

            <dependency>
                <groupId>org.weasis.core</groupId>
                <artifactId>weasis-core-img-bom</artifactId>
                <version>${weasis.core.img.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.weasis.core</groupId>
                <artifactId>weasis-core-img</artifactId>
                <version>${weasis.core.img.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>linux-x86_64</id>
            <activation>
                <os>
                    <name>linux</name>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <os-name>linux</os-name>
                <cpu-name>x86-64</cpu-name>
                <lib-file-name>libopencv_java</lib-file-name>
                <lib-file-ext>so</lib-file-ext>
            </properties>
        </profile>
        <profile>
            <id>linux-aarch64</id>
            <activation>
                <os>
                    <name>linux</name>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <os-name>linux</os-name>
                <cpu-name>aarch64</cpu-name>
                <lib-file-name>libopencv_java</lib-file-name>
                <lib-file-ext>so</lib-file-ext>
            </properties>
        </profile>
        <profile>
            <id>linux-arm32</id>
            <activation>
                <os>
                    <name>linux</name>
                    <arch>arm</arch>
                </os>
            </activation>
            <properties>
                <os-name>linux</os-name>
                <cpu-name>armv7a</cpu-name>
                <lib-file-name>libopencv_java</lib-file-name>
                <lib-file-ext>so</lib-file-ext>
            </properties>
        </profile>
        <profile>
            <id>macosx-x86_64</id>
            <activation>
                <os>
                    <name>mac os x</name>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <properties>
                <os-name>macosx</os-name>
                <cpu-name>x86-64</cpu-name>
                <lib-file-name>libopencv_java</lib-file-name>
                <lib-file-ext>dylib</lib-file-ext>
            </properties>
        </profile>
        <profile>
            <id>macosx-aarch64</id>
            <activation>
                <os>
                    <name>mac os x</name>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <os-name>macosx</os-name>
                <cpu-name>aarch64</cpu-name>
                <lib-file-name>libopencv_java</lib-file-name>
                <lib-file-ext>dylib</lib-file-ext>
            </properties>
        </profile>
        <profile>
            <id>windows-x86_64</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <os-name>windows</os-name>
                <cpu-name>x86-64</cpu-name>
                <lib-file-name>opencv_java</lib-file-name>
                <lib-file-ext>dll</lib-file-ext>
            </properties>
        </profile>
        <profile>
            <id>windows-x86</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>x86</arch>
                </os>
            </activation>
            <properties>
                <os-name>windows</os-name>
                <cpu-name>x86</cpu-name>
                <lib-file-name>opencv_java</lib-file-name>
                <lib-file-ext>dll</lib-file-ext>
            </properties>
        </profile>
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>1.5.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <configuration>
                            <flattenMode>bom
                            </flattenMode> <!-- Like ossrh but additionally keeps dependencyManagement and properties. -->
                            <!--> https://www.mojohaus.org/flatten-maven-plugin/apidocs/org/codehaus/mojo/flatten/FlattenMode.html -->
                        </configuration>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
